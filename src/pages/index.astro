---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Rafael Rondão">
	<div id="intro-div">
		<header>
			<h1>Rafael Rondão</h1>
			<h2>A software developer interested in __________ .</h2>
		</header>
	</div>

	<nav id="header-nav">
		<script>
			const el = document.getElementById("header-nav");
			const observer = new IntersectionObserver(
				([e]) => {
					if (
						e.intersectionRect.top === 0 &&
						e.intersectionRect.bottom !== 0 &&
						e.intersectionRatio < 1
					)
						e.target.classList.add("pinned");
					else if (e.intersectionRatio === 1)
						e.target.classList.remove("pinned");
				},
				{ threshold: [1] }
			);

			if (el) {
				observer.observe(el);
			}
		</script>
		<h4>Projects</h4>
		<h4>System</h4>
		<h4>Rust</h4>
		<h4>Books</h4>
		<h4>Credits</h4>
	</nav>

	<h2>GitHub projects</h2>
	<nav style="font-size: x-large;">
		<div>Website</div>
		<div>Metroid Editor</div>
		<div>Songs Listing</div>
		<div>Neural Network</div>
		<div>Twitch Hype</div>
	</nav>
	<section>
		<article>
			<div id="div-place-holder"></div>
			<div>
				<h3>This Website!</h3>
				<h5>An Astro project for static generation of this Website.</h5>
			</div>
		</article>
		<article>
			<div>
				<h3>A SuperMetroid map editor</h3>
				<h5>
					Written in Rust and using immediate GUI library egui,
					enabling compiling for Desktop and Web through WASM.
				</h5>
			</div>
			<div id="div-place-holder"></div>
		</article>
		<article>
			<div id="div-place-holder"></div>
			<div>
				<h3>A song listing toy app</h3>
				<h5>
					Comparison implementation of the same App using Flutter and
					native Kotlin.
				</h5>
			</div>
		</article>
		<article>
			<div>
				<h3>A multi-layer perceptron neural network</h3>
				<h5>
					Basic AI implementation in Rust for classifying hand written
					digits.
				</h5>
			</div>
			<div id="div-place-holder"></div>
		</article>
		<article>
			<div id="div-place-holder"></div>
			<div>
				<h3>A twitch hype detector and compositor</h3>
				<h5>
					A Python script to detect hype moments in live stream and
					clip them. Can also be used in VODs and create a timestamp
					file. A compositor can join this moments through a timestamp
					file into a single video.
				</h5>
			</div>
		</article>
	</section>
	<footer>
		This website was possible thanks too: <br />
		Astro <br />
		VSCode <br />
		Github <br />
		Pages
	</footer>
</Layout>

<style>
	* {
		font-family: sans-serif;
	}
	nav {
		margin: 1rem 20%;
		display: flex;
		justify-content: space-between;
	}
	header {
		margin-top: 8rem;
		margin-bottom: 12rem;
		margin-left: 15%;
		margin-right: 15%;
		display: flex;
		flex-direction: column;
	}
	#header-nav {
		position: sticky;
		display: flex;
		justify-content: space-evenly;
		margin: auto;
		top: -1px;
		padding-top: 20px;
		padding-bottom: 20px;
	}
	.pinned {
		background-color: hsl(245, 27%, 17%);
		box-shadow: 0 2px 30px rgb(0 0 0 / 50%);
	}
	#intro-div::after {
		content: "";
		position: absolute;
		bottom: 0;
		height: 50px;
		width: 100%;
		border-top-left-radius: 50% 100%;
		border-top-right-radius: 50% 100%;
		background-color: hsl(245, 27%, 17%);
	}
	#intro-div {
		position: relative;
		padding-top: 2px;
		margin: -10px -8px 0px;
		height: 800px;
		background-image: linear-gradient(
				to bottom,
				hsl(0, 0%, 0%),
				hsla(0, 0%, 0%, 0.3) 5%,
				transparent
			),
			linear-gradient(
				to top,
				hsla(325, 100%, 50%, 0.8),
				hsla(325, 100%, 50%, 0.4),
				hsla(325, 100%, 50%, 0) 40%
			),
			url("/sun.svg"), url("/stars.svg");
		background-repeat: no-repeat;
		background-size: cover;
		background-position-x: center;
	}
	h1,
	h2,
	footer {
		margin: 0.5rem;
		text-align: center;
	}
	h4 {
		margin: 0rem;
	}
	section {
		margin-left: 15%;
		margin-right: 15%;
	}
	article {
		margin-top: 1rem;
		margin-bottom: 1rem;
		display: flex;
	}
	#div-place-holder {
		border: solid;
		display: block;
		width: 5rem;
		height: 5rem;
	}
</style>
